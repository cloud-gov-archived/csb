version: 1
name: example-service
id: ca14ec08-04db-47d5-bc87-1d1d3f688037
description: a longer service description
display_name: Example Service
image_url: https://example.com/icon.jpg
documentation_url: https://example.com
provider_display_name: ""
support_url: https://example.com/support.html
tags: [gcp, example, service]
plans:
  - name: example-email-plan
    id: 392417e9-8e96-4073-b238-a1b711db40f5
    description: Builds emails for example.com.
    display_name: example.com email builder
    bullets:
      - information point 1
      - information point 2
      - some caveat here
    properties:
      domain: example.com
      password_special_chars: '@/ \"?'
provision:
  plan_inputs:
    - required: true
      field_name: domain
      type: string
      details: The domain name
  user_inputs:
    - required: true
      field_name: username
      type: string
      details: The username to create
  computed_inputs: []
  template: |4-
                    variable domain {type = string}
                    variable username {type = string}
                    output email {value = "${var.username}@${var.domain}"}

  template_ref: ""
  outputs:
    - required: true
      field_name: email
      type: string
      details: The combined email address
  templates: {}
  template_refs: {}
  import_inputs: []
  import_parameter_mappings: []
  import_parameters_to_delete: []
  import_parameters_to_add: []
bind:
  plan_inputs:
    - required: true
      field_name: password_special_chars
      type: string
      details: Supply your own list of special characters to use for string generation.
  user_inputs: []
  computed_inputs:
    - name: domain
      default: ${request.plan_properties["domain"]}
      overwrite: true
      type: ""
    - name: address
      default: ${instance.details["email"]}
      overwrite: true
      type: ""
  template: |4-
                    variable domain {type = string}
                    variable address {type = string}
                    variable password_special_chars {type = string}

                    resource "random_string" "password" {
                        length = 16
                        special = true
                        override_special = var.password_special_chars
                    }

                    output uri {value = "smtp://${var.address}:${random_string.password.result}@smtp.${var.domain}"}

  template_ref: ""
  outputs:
    - required: true
      field_name: uri
      type: string
      details: The uri to use to connect to this service
  templates: {}
  template_refs: {}
  import_inputs: []
  import_parameter_mappings: []
  import_parameters_to_delete: []
  import_parameters_to_add: []
examples:
  - name: Example
    description: Examples are used for documenting your service AND as integration tests.
    plan_id: 392417e9-8e96-4073-b238-a1b711db40f5
    provision_params:
      username: my-account
    bind_params: {}
plan_updateable: false
requiredenvvars: []
